입력은 
1 2 3 4
4 5 6 7
8 9 10 11


이런식으로 각 n차원 벡터 m개를 한줄씩 구문해서 입력
위의 예시는 4차원 벡터 3개

즉, 
v1  v2  v3
1   4    8
2   5    9
3   6    10
4   7    11 
이런 형태라고 보면 됨


출력은 모든 벡터를 비교하여 독립 그룹을 출력해야함


따라서 알고리즘은

n>=m인 경우에는 m개의 벡터를 한번에 가우시안 소거법을 이용하여 독립그룹을 확인하면 됨.

예를 들어 4차원 벡터 3개를 입력 받아서 가우시안 소거법을 했을때

v1 v2  v3
1   0   0 
0   1   0
0   0   0
0   0   1
이 되었다면

출력은

벡터 v1, v2는 독립이다.
벡터 v2, v3은 독립이다.
벡터 v3, v1은 독립이다.
벡터 v1, v2, v3은 독립이다.


*v1, v2, v3은 임의로 붙인 이름이고 실제 출력에는 입력한 벡터가 그대로 나오도록 해야함
예를들어
입력
1 2 3 4
5 6 7 8
9 10 11 12

일 경우 출력은 아래와 같아야함(밑은 실제 계산 결과와는 무관함 )
벡터 1 2 3 4, 벡터 5 6 7 8은 독립이다.

n<m일 때는 좀더 복잡한데
예를 들어 n=3, m=4일 경우

입력을 받았을때
각각의 벡터를 임의로 위에서부터 v1 v2 v3 v4라 한다면
v1 v2
v1 v3
v1 v4
v2 v3
v2 v4
v3 v4
v1 v2 v3
v1 v2 v4
v2 v3 v4
의 독립여부를 모두 확인해야함

따라서
v1 v2 v3을 가우시안 소거법을 통하여 계산했을때 결과가
1  0  0
0  1  0
0  0  0
나오고,

v2 v3 v4
1  0  0
0  1  0
0  0  1
나오고,

v1 v2 v4
1  0  0
0  1  0
0  0  0

이라면 출력은 
벡터 v1, 벡터 v2 은 독립이다.
벡터 v2, 벡터 v3 은 독립이다.
벡터 v2, 벡터 v4 은 독립이다.
벡터 v3, 벡터 v4 은 독립이다.
벡터 v2, 벡터 v3, 벡터 v4 은 독립이다
벡터 v1, 벡터 v2, 벡터 v4 은 독립이다.


즉 n차원 벡터 m개를 입력받았을 때 n<m이면 
mC2+mC3+..mCn개의 모든 경우의 수를 독립인지 종속인지 확인하면 됨.